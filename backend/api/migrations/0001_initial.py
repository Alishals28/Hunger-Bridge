# Generated by Django 5.2.1 on 2025-05-09 15:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('user_type', models.CharField(choices=[('Donor', 'Donor'), ('Volunteer', 'Volunteer'), ('NGO', 'Ngo'), ('Admin', 'Admin')], max_length=10)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('donation_id', models.AutoField(primary_key=True, serialize=False)),
                ('food_description', models.CharField(max_length=4000)),
                ('quantity', models.IntegerField()),
                ('pickup_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Picked Up', 'Picked Up'), ('Cancelled', 'Cancelled'), ('Expired', 'Expired')], max_length=20)),
                ('posted_at', models.DateTimeField(auto_now_add=True)),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NGO',
            fields=[
                ('ngo_id', models.AutoField(primary_key=True, serialize=False)),
                ('organization_name', models.CharField(max_length=100)),
                ('license_number', models.CharField(max_length=50)),
                ('verification_status', models.CharField(choices=[('Verified', 'Verified'), ('Not Verified', 'Not Verified')], default='Not Verified', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('volunteer_id', models.AutoField(primary_key=True, serialize=False)),
                ('availability_status', models.CharField(choices=[('Available', 'Available'), ('Not Available', 'Not Available')], max_length=20)),
                ('preferred_area', models.CharField(max_length=500)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('pickup_time', models.DateTimeField()),
                ('delivery_time', models.DateTimeField()),
                ('feedback_given', models.TextField(blank=True, null=True)),
                ('donation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.donation')),
                ('ngo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ngo')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.volunteer')),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('route_id', models.AutoField(primary_key=True, serialize=False)),
                ('donor_location', models.CharField(max_length=500)),
                ('ngo_location', models.CharField(max_length=500)),
                ('optimized_route_data', models.JSONField()),
                ('donation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.donation')),
                ('ngo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ngo')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.volunteer')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('request_id', models.AutoField(primary_key=True, serialize=False)),
                ('priority', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Urgent', 'Urgent')], max_length=20)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Completed', 'Completed')], max_length=20)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('donation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.donation')),
                ('ngo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.ngo')),
                ('volunteer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.volunteer')),
            ],
        ),
    ]
